/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.lafassoftware;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Timothy Opiyo
 */
public class NewSignUp extends javax.swing.JFrame {

    Connection con = null;
    Statement statement = null;

    /**
     * Creates new form NewSignUp
     *
     * @throws java.text.ParseException
     * @throws java.io.IOException
     */
    public NewSignUp() throws ParseException, IOException {
        initComponents();
        this.setLocationRelativeTo(null);
        Date sdf = new SimpleDateFormat("MM-DD-YYYY").parse("01-01-2015");
        dateChooserSignUp.setMinSelectableDate(sdf);
        Date date = new Date();
        dateChooserSignUp.setMaxSelectableDate(date);

        //add application icon
        String imagepath = "/my/lafassoftware/ScalesForToolbar.png";
        InputStream imgstream = NewSignUp.class.getResourceAsStream(imagepath);
        BufferedImage myImg = ImageIO.read(imgstream);
        this.setIconImage(myImg);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        tabbedPaneSignUp = new javax.swing.JTabbedPane();
        panelPersonalDetails = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtFname = new javax.swing.JTextField();
        txtLname = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtNationalID = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        btnContinue = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        radioBtnNotsay = new javax.swing.JRadioButton();
        radioBtnMale = new javax.swing.JRadioButton();
        radioBtnFemale = new javax.swing.JRadioButton();
        radiobtnOther = new javax.swing.JRadioButton();
        panelEmpDetails = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxPractice = new javax.swing.JComboBox<>();
        jComboBoxDepartment = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        btnContinue2 = new javax.swing.JButton();
        dateChooserSignUp = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        panelLoginDetails = new javax.swing.JPanel();
        labelUsername = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        labelConPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        passwordUser = new javax.swing.JPasswordField();
        passwordConfirmUser = new javax.swing.JPasswordField();
        btnSubmit = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnClearAll = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/LAFUS NEW.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setText("LAFUS");

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(0, 153, 153));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Enter your information in the forms below starting with:\n        *personal information\n        *employee details\n        *then login details.");
        jScrollPane1.setViewportView(jTextArea1);

        tabbedPaneSignUp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabbedPaneSignUp.setName(""); // NOI18N
        tabbedPaneSignUp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneSignUpStateChanged(evt);
            }
        });

        jLabel4.setText("First name:");

        jLabel5.setText("Last name:");

        jLabel6.setText("Email:");

        jLabel7.setText("National ID:");

        jLabel8.setText("Phone:");

        jLabel10.setText("Address:");

        txtFname.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtFname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFnameKeyPressed(evt);
            }
        });

        txtLname.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtLname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtLname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLnameKeyPressed(evt);
            }
        });

        txtEmail.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtEmail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
        });

        txtNationalID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNationalID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtNationalID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNationalIDKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNationalIDKeyTyped(evt);
            }
        });

        txtPhone.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPhone.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneKeyTyped(evt);
            }
        });

        txtAddress.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtAddress.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
        });

        btnContinue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/nextTab.png"))); // NOI18N
        btnContinue.setToolTipText("continue to next tab");
        btnContinue.setContentAreaFilled(false);
        btnContinue.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/nextTabRollover.png"))); // NOI18N
        btnContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinueActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Select gender", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("sansserif", 0, 12))); // NOI18N

        buttonGroupGender.add(radioBtnNotsay);
        radioBtnNotsay.setText("Prefer not to say");
        radioBtnNotsay.setToolTipText("select Prefer not to say");

        buttonGroupGender.add(radioBtnMale);
        radioBtnMale.setText("Male");
        radioBtnMale.setToolTipText("Select Male");
        radioBtnMale.setBorder(null);
        radioBtnMale.setBorderPainted(true);

        buttonGroupGender.add(radioBtnFemale);
        radioBtnFemale.setText("Female");
        radioBtnFemale.setToolTipText("Select Female");
        radioBtnFemale.setBorder(null);
        radioBtnFemale.setBorderPainted(true);

        buttonGroupGender.add(radiobtnOther);
        radiobtnOther.setText("Other");
        radiobtnOther.setToolTipText("select Other");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioBtnFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioBtnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radiobtnOther)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(radioBtnNotsay)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioBtnFemale)
                    .addComponent(radioBtnMale)
                    .addComponent(radiobtnOther)
                    .addComponent(radioBtnNotsay))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPersonalDetailsLayout = new javax.swing.GroupLayout(panelPersonalDetails);
        panelPersonalDetails.setLayout(panelPersonalDetailsLayout);
        panelPersonalDetailsLayout.setHorizontalGroup(
            panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPersonalDetailsLayout.createSequentialGroup()
                .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPersonalDetailsLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel7)
                        .addGap(6, 6, 6)
                        .addComponent(txtNationalID, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPersonalDetailsLayout.createSequentialGroup()
                        .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPersonalDetailsLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPersonalDetailsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelPersonalDetailsLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnContinue, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        panelPersonalDetailsLayout.setVerticalGroup(
            panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPersonalDetailsLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnContinue, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelPersonalDetailsLayout.createSequentialGroup()
                        .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNationalID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(panelPersonalDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 31, Short.MAX_VALUE))
        );

        tabbedPaneSignUp.addTab("Personal details", panelPersonalDetails);

        jLabel16.setText("Area of practice:");

        jComboBoxPractice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select category", "Legal secretary", "Law clerk", "Bankruptcy lawyer", "Business/Coorporate law attorney", "Civil rights attorney", "Criminal defense attorney", "DUI-DWI attorney", "Employment lawyer", "Environmental laywer", "Estate law attorney", "Family and divorce lawyer", "Personal injury lawyer" }));

        jComboBoxDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select department", "Litigation department", "Transactional department" }));

        jLabel17.setText("Department:");

        btnContinue2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/nextTab.png"))); // NOI18N
        btnContinue2.setToolTipText("continue to next tab");
        btnContinue2.setContentAreaFilled(false);
        btnContinue2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/nextTabRollover.png"))); // NOI18N
        btnContinue2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinue2ActionPerformed(evt);
            }
        });

        jLabel18.setText("Date hired:");

        javax.swing.GroupLayout panelEmpDetailsLayout = new javax.swing.GroupLayout(panelEmpDetails);
        panelEmpDetails.setLayout(panelEmpDetailsLayout);
        panelEmpDetailsLayout.setHorizontalGroup(
            panelEmpDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmpDetailsLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(panelEmpDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEmpDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelEmpDetailsLayout.createSequentialGroup()
                        .addGroup(panelEmpDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateChooserSignUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jComboBoxPractice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(btnContinue2)
                        .addGap(42, 42, 42))))
        );
        panelEmpDetailsLayout.setVerticalGroup(
            panelEmpDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmpDetailsLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel18)
                .addGap(13, 13, 13)
                .addComponent(dateChooserSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxPractice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(btnContinue2)
                .addGap(34, 34, 34))
        );

        tabbedPaneSignUp.addTab("Employee details", panelEmpDetails);

        labelUsername.setText("Username:");

        labelPassword.setText("Password:");

        labelConPassword.setText("Confirm password:");

        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsernameKeyPressed(evt);
            }
        });

        passwordUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordUserKeyPressed(evt);
            }
        });

        passwordConfirmUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordConfirmUserKeyPressed(evt);
            }
        });

        btnSubmit.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/savetoDB.png"))); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.setToolTipText("submit your details");
        btnSubmit.setContentAreaFilled(false);
        btnSubmit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/newSubmitRolloverBlue.png"))); // NOI18N
        btnSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSubmitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSubmitMouseExited(evt);
            }
        });
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel11.setText("These are the details you will use when logging in.");

        javax.swing.GroupLayout panelLoginDetailsLayout = new javax.swing.GroupLayout(panelLoginDetails);
        panelLoginDetails.setLayout(panelLoginDetailsLayout);
        panelLoginDetailsLayout.setHorizontalGroup(
            panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoginDetailsLayout.createSequentialGroup()
                .addGroup(panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLoginDetailsLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel11))
                    .addGroup(panelLoginDetailsLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelPassword)
                                .addComponent(labelUsername))
                            .addGroup(panelLoginDetailsLayout.createSequentialGroup()
                                .addComponent(labelConPassword)
                                .addGap(3, 3, 3)))
                        .addGroup(panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordUser)
                            .addComponent(passwordConfirmUser)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(133, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLoginDetailsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(196, 196, 196))
        );
        panelLoginDetailsLayout.setVerticalGroup(
            panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoginDetailsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel11)
                .addGap(40, 40, 40)
                .addGroup(panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPassword)
                    .addComponent(passwordUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(panelLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConPassword)
                    .addComponent(passwordConfirmUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(btnSubmit)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        tabbedPaneSignUp.addTab("Login details", panelLoginDetails);

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/REALhOME1.png"))); // NOI18N
        btnHome.setToolTipText("Back to home page");
        btnHome.setBorder(null);
        btnHome.setContentAreaFilled(false);
        btnHome.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/REALHOME2.png"))); // NOI18N
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
        });
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel3.setText("Welcome to LAFUS sign up page");

        btnClearAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/clearall.png"))); // NOI18N
        btnClearAll.setText("Clear all");
        btnClearAll.setBorder(null);
        btnClearAll.setContentAreaFilled(false);
        btnClearAll.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/my/lafassoftware/clearallRollover.png"))); // NOI18N
        btnClearAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnClearAllMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearAllMouseExited(evt);
            }
        });
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tabbedPaneSignUp)
                    .addComponent(jScrollPane1))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tabbedPaneSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//home button
    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        LawFirmHome jframeHome = null;
        try {
            jframeHome = new LawFirmHome();
        } catch (IOException ex) {
            Logger.getLogger(NewSignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        jframeHome.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseEntered

    }//GEN-LAST:event_btnHomeMouseEntered

    private void btnContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinueActionPerformed
        tabbedPaneSignUp.setSelectedIndex(1);
    }//GEN-LAST:event_btnContinueActionPerformed

    private void btnContinue2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinue2ActionPerformed
        tabbedPaneSignUp.setSelectedIndex(2);
    }//GEN-LAST:event_btnContinue2ActionPerformed

    //submit button
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        signUpmethod();
    }//GEN-LAST:event_btnSubmitActionPerformed

    //clear all button
    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllActionPerformed
        {
            int response = JOptionPane.showConfirmDialog(null, "Do you want to clear the ENTRIES?",
                    "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch (response) {
                case JOptionPane.NO_OPTION:
                    break;
                case JOptionPane.CLOSED_OPTION:
                    break;
                case JOptionPane.YES_OPTION:
                    // Reset Text Fields
                    txtFname.setText("");
                    txtLname.setText("");
                    txtEmail.setText("");
                    txtNationalID.setText("");
                    txtPhone.setText("");
                    txtAddress.setText("");
                    buttonGroupGender.clearSelection();
                    dateChooserSignUp.setCalendar(null);
                    jComboBoxPractice.setSelectedIndex(0);
                    jComboBoxDepartment.setSelectedIndex(0);
                    txtUsername.setText("");
                    passwordUser.setText("");
                    passwordConfirmUser.setText("");
                    tabbedPaneSignUp.setSelectedIndex(0);
                    break;
                default:
                    break;
            }
        }

    }//GEN-LAST:event_btnClearAllActionPerformed

    //tabbed pane events to check if previous panes have been filled
    private void tabbedPaneSignUpStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneSignUpStateChanged
        evt.getSource();
        String tab = tabbedPaneSignUp.getTitleAt(tabbedPaneSignUp.getSelectedIndex());
        if (tab.equals("Employee details")) {
            methodCheck();
        } else if (tab.equals("Login details")) {
            methodCheckEmp();
        }
    }//GEN-LAST:event_tabbedPaneSignUpStateChanged

    private void passwordConfirmUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordConfirmUserKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            signUpmethod();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            passwordUser.requestFocusInWindow();
        }
    }//GEN-LAST:event_passwordConfirmUserKeyPressed

    private void btnClearAllMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearAllMouseEntered
        btnClearAll.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnClearAllMouseEntered

    private void btnClearAllMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearAllMouseExited
        btnClearAll.setForeground(Color.BLACK);
    }//GEN-LAST:event_btnClearAllMouseExited

    private void btnSubmitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubmitMouseExited
        btnSubmit.setForeground(Color.BLACK);
    }//GEN-LAST:event_btnSubmitMouseExited

    private void btnSubmitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubmitMouseEntered
        btnSubmit.setForeground(Color.BLUE);
    }//GEN-LAST:event_btnSubmitMouseEntered

    private void txtFnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFnameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtLname.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtFnameKeyPressed

    private void txtLnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLnameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtEmail.requestFocusInWindow();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtFname.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtLnameKeyPressed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNationalID.requestFocusInWindow();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtLname.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtEmailKeyPressed

    private void txtPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtAddress.requestFocusInWindow();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtNationalID.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtPhoneKeyPressed

    private void txtNationalIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNationalIDKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtPhone.requestFocusInWindow();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtEmail.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtNationalIDKeyPressed

    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtPhone.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtAddressKeyPressed

    private void txtUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            passwordUser.requestFocusInWindow();
        }
        // else if(evt.getKeyCode() == KeyEvent.VK_UP){txtLname.requestFocusInWindow();}
    }//GEN-LAST:event_txtUsernameKeyPressed

    private void passwordUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordUserKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            passwordConfirmUser.requestFocusInWindow();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtUsername.requestFocusInWindow();
        }
    }//GEN-LAST:event_passwordUserKeyPressed

    private void txtNationalIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNationalIDKeyTyped
        char c = evt.getKeyChar();
        if ((c == java.awt.event.KeyEvent.VK_SPACE) || (c == 9 || c >= 58 && c <= 126 || c >= 33 && c <= 42 || c >= 44 && c <= 47)) {
            getToolkit().beep();
            evt.consume();}
    }//GEN-LAST:event_txtNationalIDKeyTyped

    private void txtPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyTyped
        char c = evt.getKeyChar();
        if ((c == java.awt.event.KeyEvent.VK_SPACE) || (c == 9 || c >= 58 && c <= 126 || c >= 33 && c <= 42 || c >= 44 && c <= 47)) {
            getToolkit().beep();
            evt.consume();}
    }//GEN-LAST:event_txtPhoneKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new NewSignUp().setVisible(true);
            } catch (ParseException ex) {
                Logger.getLogger(NewSignUp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(NewSignUp.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    public void signUpmethod() {

        if (RegisterData() == true) {
            NewSignUp.EmailValidator b = new NewSignUp.EmailValidator();
            if (b.validate(txtEmail.getText()) == true) {
                String strFname = txtFname.getText().toUpperCase();
                String strSname = txtLname.getText().toUpperCase();
                String strEmail = txtEmail.getText();
                String strNtionalId = txtNationalID.getText();
                String strPhone = txtPhone.getText();
                String strAddress = txtAddress.getText();
                Date date = dateChooserSignUp.getDate();
                String radioText = "";
                if (radioBtnFemale.isSelected()) {
                    radioText = radioBtnFemale.getText();
                }
                if (radioBtnMale.isSelected()) {
                    radioText = radioBtnMale.getText();
                }
                if (radiobtnOther.isSelected()) {
                    radioText = radiobtnOther.getText();
                }
                if (radioBtnNotsay.isSelected()) {
                    radioText = radioBtnNotsay.getText();
                }
                String strcomboPractice = (String) jComboBoxPractice.getSelectedItem();
                String strcomboDepartment = (String) jComboBoxDepartment.getSelectedItem();
                String strUser = txtUsername.getText();
                String strCPassword = new String(passwordUser.getPassword());

                try {
                    Class.forName("com.mysql.jdbc.Driver");

                    con = DriverManager.getConnection("jdbc:mysql://localhost/lafus", "root", "");
                    statement = con.createStatement();

                    // SQL Insert
                    String sql = "INSERT INTO employee " + "(fname,lname,email,national_id,phone,address,gender,date_hired,practice,dept,username,password)"
                            + "VALUES ('" + strFname + "','"
                            + strSname + "','"
                            + strEmail + "','"
                            + strNtionalId + "','"
                            + strPhone + "','"
                            + strAddress + "','"
                            + radioText + "','"
                            + date + "','"
                            + strcomboPractice + "','"
                            + strcomboDepartment + "','"
                            + strUser + "','"
                            + strCPassword + "') ";
                    statement.execute(sql);

                    JOptionPane.showMessageDialog(null, "New user, " + strFname + " " + strSname + "." + System.lineSeparator() + ""
                            + "Use the username " + strUser + " and your new password to log in");

                    // Reset Text Fields
                    txtFname.setText("");
                    txtLname.setText("");
                    txtEmail.setText("");
                    txtNationalID.setText("");
                    txtPhone.setText("");
                    txtAddress.setText("");
                    dateChooserSignUp.setCalendar(null);
                    txtUsername.setText("");
                    passwordUser.setText("");

                    LawFirmHome.main(null);
                    dispose();
                    //status  = true;

                } catch (ClassNotFoundException | SQLException | HeadlessException es) {
                    // TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(null, "Unable to register");
                    JOptionPane.showMessageDialog(null, es.getMessage());
                }

                try {
                    if (statement != null) {
                        statement.close();
                        con.close();
                    }
                } catch (SQLException es) {
                    // TODO Auto-generated catch block
                    JOptionPane.showMessageDialog(null, es.getMessage());
                }
            }//end if statement that validate email

        }//end of if statement that validate the form

    }

    private Boolean RegisterData() {

        //EmailValidator b=new EmailValidator ();
        Boolean status = true;
        String strFname = txtFname.getText().toUpperCase().trim();
        String strSname = txtLname.getText().toUpperCase().trim();
        String strEmail = txtEmail.getText().trim();
        String strNtionalId = txtNationalID.getText().trim();
        String strPhone = txtPhone.getText().trim();
        String strAddress = txtAddress.getText().trim();
        String radioText = "";
        if (radioBtnFemale.isSelected()) {
            radioText = radioBtnFemale.getText();
        }
        if (radioBtnMale.isSelected()) {
            radioText = radioBtnMale.getText();
        }
        Date date = dateChooserSignUp.getDate();
        String strcomboPractice = (String) jComboBoxPractice.getSelectedItem();
        String strcomboDepartment = (String) jComboBoxDepartment.getSelectedItem();
        String strUser = txtUsername.getText().trim();
        int cntUser = strUser.length();
        String strPassword = new String(passwordConfirmUser.getPassword());
        String strCPassword = new String(passwordUser.getPassword());
        int cntPass = strCPassword.length();

        if (strFname.equals("")) //first Name
        {
            JOptionPane.showMessageDialog(null,
                    "Please Input (First Name) under Personal details tab");
            txtFname.requestFocusInWindow();
            return false;
        }
        if (buttonGroupGender.getSelection() == null) {
            JOptionPane.showMessageDialog(null,
                    "Please select (Gender)");
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        }

        if (strSname.equals("")) // second Name
        {
            JOptionPane.showMessageDialog(null,
                    "Please Input (Last Name) under Personal details tab");
            txtLname.requestFocusInWindow();
            return false;
        }
        if (strEmail.equals("")) // email
        {
            JOptionPane.showMessageDialog(null,
                    "Please Input (email)");
            txtEmail.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        }

        if (strNtionalId.equals("")) // Password
        {
            JOptionPane.showMessageDialog(null,
                    "Please Input (national id)");
            txtNationalID.requestFocusInWindow();
            return false;
        }
        if (strPhone.equals("")) // Phone
        {
            JOptionPane.showMessageDialog(null,
                    "Please Input (phone)");
            txtPhone.requestFocusInWindow();
            return false;
        }

        if (strAddress.equals("")) // address
        {
            JOptionPane.showMessageDialog(null,
                    "Please input (address)");
            txtAddress.requestFocusInWindow();
            return false;
        }
        if (!strCPassword.equals(strPassword)) // Password match
        {
            JOptionPane.showMessageDialog(null,
                    "(Password doesn't Match!)");
            passwordUser.requestFocusInWindow();
            
            return false;
        }
        if (cntPass < 5) // Password match
        {
            JOptionPane.showMessageDialog(null,
                    "(Password is too short!)");
            passwordUser.requestFocusInWindow();
            
            return false;
        }
        if (date == null) // date
        {
            JOptionPane.showMessageDialog(null,
                    "Please Input (date hired)");
            dateChooserSignUp.requestFocusInWindow();
            //tabbedPaneSignUp.setSelectedIndex(1);
            return false;
        }
        if (strUser.equals("")) // date
        {
            JOptionPane.showMessageDialog(null,
                    "Please enter (username)");
            txtUsername.requestFocusInWindow();
            
            //tabbedPaneSignUp.setSelectedIndex(1);
            return false;
        }
        if (cntUser < 4) // date
        {
            JOptionPane.showMessageDialog(null,
                    "Please Input (username) with more than four characters");
            txtUsername.requestFocusInWindow();
            
            //tabbedPaneSignUp.setSelectedIndex(1);
            return false;
        }
        if (strcomboPractice.contains("select category")) // id number
        {
            JOptionPane.showMessageDialog(null,
                    "Please select status");
            //comboStatus.requestFocusInWindow(); 
            return false;
        }
        if (strcomboDepartment.contains("select department")) // id number
        {
            JOptionPane.showMessageDialog(null,
                    "Please select status");
            //comboStatus.requestFocusInWindow(); 
            return false;
        }
        
                    return true;
    }

    private boolean methodCheck() {
        String strFname = txtFname.getText().trim();
        String strSname = txtLname.getText().trim();
        String strEmail = txtEmail.getText().trim();
        String strNtionalId = txtNationalID.getText().trim();
        String strPhone = txtPhone.getText().trim();
        String strAddress = txtAddress.getText().trim();

        if (strFname.equals("")) //first Name
        {
            JOptionPane.showMessageDialog(null,
                    "Please enter (First Name)");
            txtFname.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        }
        if (strSname.equals("")) //last Name
        {
            JOptionPane.showMessageDialog(null,
                    "Please enter (Last Name)");
            txtLname.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        }
        if (strEmail.equals("")) //email
        {
            JOptionPane.showMessageDialog(null,
                    "Please enter (Email)");
            txtEmail.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        }
        if (strNtionalId.equals("")) //national id
        {
            JOptionPane.showMessageDialog(null,
                    "Please enter (National ID)");
            txtNationalID.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        }
        if (strPhone.equals("")) //phone
        {
            JOptionPane.showMessageDialog(null,
                    "Please enter (Phone)");
            txtPhone.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        }
        if (strAddress.equals("")) //address
        {
            JOptionPane.showMessageDialog(null,
                    "Please enter (Address)");
            txtAddress.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        }
        if (buttonGroupGender.getSelection() == null) {
            JOptionPane.showMessageDialog(null,
                    "Please select (Gender)");
            tabbedPaneSignUp.setSelectedIndex(0);
            return false;
        } else {
            tabbedPaneSignUp.setSelectedIndex(1);
            return true;
        }

    }

    private boolean methodCheckEmp() {
        String strcomboPractice = (String) jComboBoxPractice.getSelectedItem();
        String strcomboDepartment = (String) jComboBoxDepartment.getSelectedItem();

        if (strcomboPractice.equals("select category")) //last Name
        {
            JOptionPane.showMessageDialog(null,
                    "Please select (Area of practice)");
            tabbedPaneSignUp.setSelectedIndex(1);
            return false;
        }
        if (strcomboDepartment.equals("select department")) //email
        {
            JOptionPane.showMessageDialog(null,
                    "Please select (Department)");
            tabbedPaneSignUp.setSelectedIndex(1);
            return false;
        }
        if (((JTextField) dateChooserSignUp.getDateEditor().getUiComponent()).getText().trim().equals("")) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Date hired cannot be empty");
            dateChooserSignUp.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(1);
            return false;

        }
        if (dateChooserSignUp.getDate().after(new Date())) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Cannot enter a future date");
            dateChooserSignUp.requestFocusInWindow();
            tabbedPaneSignUp.setSelectedIndex(1);
            return false;
        } else {
            tabbedPaneSignUp.setSelectedIndex(2);
            return true;
        }

    }

    private class EmailValidator {

        private final Pattern pattern;
        private Matcher matcher;
        private static final String EMAIL_PATTERN
                = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

        public EmailValidator() {
            pattern = Pattern.compile(EMAIL_PATTERN);
        }

        /**
         * Validate hex with regular expression
         *
         */
        public boolean validate(final String hex) {

            matcher = pattern.matcher(hex);
            if (matcher.matches()) {
                return true;
                //JOptionPane.showMessageDialog(null, "correct email");
            } else if (!matcher.matches()) {
                JOptionPane.showMessageDialog(null, "incorrect email format");
                tabbedPaneSignUp.setSelectedIndex(0);
                txtEmail.requestFocusInWindow();
                return false;
            }
            return matcher.matches();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnContinue;
    private javax.swing.JButton btnContinue2;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSubmit;
    private javax.swing.ButtonGroup buttonGroupGender;
    private com.toedter.calendar.JDateChooser dateChooserSignUp;
    private javax.swing.JComboBox<String> jComboBoxDepartment;
    private javax.swing.JComboBox<String> jComboBoxPractice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelConPassword;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JPanel panelEmpDetails;
    private javax.swing.JPanel panelLoginDetails;
    private javax.swing.JPanel panelPersonalDetails;
    private javax.swing.JPasswordField passwordConfirmUser;
    private javax.swing.JPasswordField passwordUser;
    private javax.swing.JRadioButton radioBtnFemale;
    private javax.swing.JRadioButton radioBtnMale;
    private javax.swing.JRadioButton radioBtnNotsay;
    private javax.swing.JRadioButton radiobtnOther;
    private javax.swing.JTabbedPane tabbedPaneSignUp;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTextField txtNationalID;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
